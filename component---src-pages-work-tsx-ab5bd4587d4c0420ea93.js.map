{"version":3,"file":"component---src-pages-work-tsx-ab5bd4587d4c0420ea93.js","mappings":"mLAGe,SAASA,IACtB,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,eAetB,EAACC,EAAM,EAACC,IAAYC,EAAAA,EAAAA,UAAS,CACjCC,KAAML,EAAKM,YAAYC,SAAS,KAGlC,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,UACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,QACbD,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,gBACXD,EAAAA,cAAAA,MAAAA,CAAKE,IAAKR,EAAMG,KAAKM,IAAKC,IAAI,OAAOC,MAAO,CAAEC,SAAU,YAE1DN,EAAAA,cAAAA,OAAAA,KAAM,aAERA,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,aACZD,EAAAA,cAAAA,QAAAA,CAAOO,KAAK,WAAWC,GAAG,oBAE1BR,EAAAA,cAAAA,QAAAA,CAAOS,QAAQ,kBAAkBR,UAAU,aAAY,KAGvDD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,QACbD,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAG,IAAIC,gBAAgB,UAAS,SAIxCZ,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAG,SAASC,gBAAgB,UAAS,UAI7CZ,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAG,QAAQC,gBAAgB,UAAS,SAI5CZ,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAG,WAAWC,gBAAgB,UAAS,cAQzD,CCzDe,SAASC,EAAO,GAAc,IAAd,SAAEC,GAAU,EACzC,OACEd,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,wBACbD,EAAAA,cAAAA,MAAAA,CAAKQ,GAAG,UACRR,EAAAA,cAAAA,MAAAA,CAAKQ,GAAG,WACRR,EAAAA,cAAAA,MAAAA,CAAKQ,GAAG,WACRR,EAAAA,cAACT,EAAM,MACPS,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,WAAWa,GAGhC,C,yFCSO,SAASC,EAAKC,GACnB,OAAOhB,EAAAA,cAAAA,QAAAA,KAAQgB,EAAMxB,KAAKyB,KAAKC,aAAaC,MAAM,UACpD,CAJA,UAjBaC,IAAmD,YAAlD,KAAE5B,GAA2C,EACzD,OACEQ,EAAAA,cAACa,EAAAA,EAAM,KACLb,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAAAA,IAAAA,KAAG,eAAsB,QAAV,EAACR,EAAKyB,YAAI,OAAc,QAAd,EAATI,EAAWH,oBAAY,WAAd,EAATI,EAAyBH,OACzCnB,EAAAA,cAAAA,IAAAA,KAAG,eAAauB,KAAKC,UAAUhC,EAAKM,cACpCE,EAAAA,cAAAA,IAAAA,KAAG,eAAauB,KAAKC,UAAUhC,EAAKiC,eACpCzB,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,IAAAA,KAAG,iBACHA,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,OAAAA,KAAOuB,KAAKC,UAAUhC,EAAM,KAAM,MAG/B,C","sources":["webpack://ptexcel.github.io/./src/components/navBar.tsx","webpack://ptexcel.github.io/./src/components/layout.tsx","webpack://ptexcel.github.io/./src/pages/work.tsx"],"sourcesContent":["import { Link, graphql, useStaticQuery } from \"gatsby\";\nimport React, { useState } from \"react\";\n\nexport default function NavBar() {\n  const data = useStaticQuery(graphql`\n    query SiteInfo {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      userProfile {\n        pictures {\n          url\n        }\n      }\n    }\n  `);\n\n  const [state, setState] = useState({\n    logo: data.userProfile.pictures[0],\n  });\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"logo\">\n        <a className=\"navbar-brand\">\n          <img src={state.logo.url} alt=\"logo\" style={{ maxWidth: \"100px\" }} />\n        </a>\n        <span>Pt Excel</span>\n      </div>\n      <ul className=\"nav-links\">\n        <input type=\"checkbox\" id=\"checkbox_toggle\" />\n\n        <label htmlFor=\"checkbox_toggle\" className=\"hamburger\">\n          &#9776;\n        </label>\n        <div className=\"menu\">\n          <li>\n            <Link to=\"/\" activeClassName=\"active\">\n              Home\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/about\" activeClassName=\"active\">\n              About\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/work\" activeClassName=\"active\">\n              Work\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/contact\" activeClassName=\"active\">\n              Contact\n            </Link>\n          </li>\n        </div>\n      </ul>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport NavBar from \"./navBar\";\nimport \"../styles/global.scss\";\nimport \"../styles/stars.scss\";\n\nexport default function Layout({ children }) {\n  return (\n    <div className=\"container background\">\n      <div id=\"stars\" />\n      <div id=\"stars2\" />\n      <div id=\"stars3\" />\n      <NavBar />\n      <div className=\"content\">{children}</div>\n    </div>\n  );\n}\n","import { graphql, PageProps, HeadProps } from \"gatsby\";\nimport * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport { DataProps } from \"../constants\";\n\nconst Work = ({ data }: PageProps<Queries.TypegenPageQuery>) => {\n  return (\n    <Layout>\n      <main>\n        <p>Site title: {data.site?.siteMetadata?.title}</p>\n        <p>Site title: {JSON.stringify(data.userProfile)}</p>\n        <p>Site title: {JSON.stringify(data.allPortfolio)}</p>\n        <hr />\n        <p>Query Result:</p>\n        <pre>\n          <code>{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      </main>\n    </Layout>\n  );\n};\n\nexport default Work;\n\nexport function Head(props: HeadProps<DataProps>) {\n  return <title>{props.data.site.siteMetadata.title} - Work</title>;\n}\n\nexport const query = graphql`\n  query TypegenPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    userProfile {\n      firstName\n      lastName\n      features\n      skillGraph {\n        skills {\n          id\n          value\n          content\n          percentage\n        }\n      }\n      backgroundImage {\n        url\n      }\n      pictures {\n        url\n      }\n      aboutMe {\n        html\n      }\n      portfolioSummary {\n        html\n      }\n      cv {\n        fileName\n        url\n      }\n    }\n    allPortfolio {\n      nodes {\n        id\n        title\n        subTitle\n        technologies\n        displayOrder\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n"],"names":["NavBar","data","useStaticQuery","state","setState","useState","logo","userProfile","pictures","React","className","src","url","alt","style","maxWidth","type","id","htmlFor","Link","to","activeClassName","Layout","children","Head","props","site","siteMetadata","title","_ref","_data$site","_data$site$siteMetada","JSON","stringify","allPortfolio"],"sourceRoot":""}