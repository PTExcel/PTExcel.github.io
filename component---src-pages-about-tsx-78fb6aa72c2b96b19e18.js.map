{"version":3,"file":"component---src-pages-about-tsx-78fb6aa72c2b96b19e18.js","mappings":"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","sources":["webpack://ptexcel.github.io/./src/components/navBar.tsx","webpack://ptexcel.github.io/./src/components/layout.tsx","webpack://ptexcel.github.io/./src/hooks/use-site-metadata.tsx","webpack://ptexcel.github.io/./src/components/seo.tsx","webpack://ptexcel.github.io/./src/pages/about.tsx"],"sourcesContent":["import { Link, graphql, useStaticQuery } from \"gatsby\";\nimport React, { useState } from \"react\";\n\nexport default function NavBar() {\n  const data = useStaticQuery(graphql`\n    query SiteInfo {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      userProfile {\n        pictures {\n          url\n        }\n      }\n    }\n  `);\n\n  const [state, setState] = useState({\n    logo: data.userProfile.pictures[0],\n  });\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"logo\">\n        <a className=\"navbar-brand\">\n          <img src={state.logo.url} alt=\"logo\" style={{ maxWidth: \"100px\" }} />\n        </a>\n        <span>Pt Excel</span>\n      </div>\n      <ul className=\"nav-links\">\n        <input type=\"checkbox\" id=\"checkbox_toggle\" />\n\n        <label htmlFor=\"checkbox_toggle\" className=\"hamburger\">\n          &#9776;\n        </label>\n        <div className=\"menu\">\n          <li>\n            <Link to=\"/\" activeClassName=\"active\">\n              Home\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/about\" activeClassName=\"active\">\n              About\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/work\" activeClassName=\"active\">\n              Work\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/contact\" activeClassName=\"active\">\n              Contact\n            </Link>\n          </li>\n        </div>\n      </ul>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport NavBar from \"./navBar\";\nimport \"../styles/global.scss\";\nimport \"../styles/stars.scss\";\n\ndeclare global {\n  interface Window {\n    // ‚ö†Ô∏è notice that \"Window\" is capitalized here\n    gtag: any;\n  }\n}\n\nexport default function Layout({ children }) {\n  return (\n    <div className=\"container\">\n      <NavBar />\n      <div className=\"content background\">\n        <div id=\"stars\" />\n        <div id=\"stars2\" />\n        <div id=\"stars3\" />\n        {children}\n      </div>\n      {/* <footer>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <div className=\"copyright-box\"></div>\n            </div>\n          </div>\n        </div>\n      </footer> */}\n    </div>\n  );\n}\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterUsername\n          image\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","import React from \"react\";\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\";\n\nexport const SEO = ({ title, description, pathname, children }) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image,\n    siteUrl,\n    twitterUsername,\n  } = useSiteMetadata();\n\n  const seo = {\n    title: `${defaultTitle} - ${title}`,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image}`,\n    url: `${siteUrl}${pathname || ``}`,\n    twitterUsername,\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\n      <link\n        rel=\"icon\"\n        href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>üë§</text></svg>\"\n      />\n      {children}\n    </>\n  );\n};\n","import { graphql, PageProps } from \"gatsby\";\nimport * as React from \"react\";\nimport { SEO } from \"../components/seo\";\nimport Layout from \"../components/layout\";\n\nconst About = ({ data }: PageProps<Queries.Query>) => {\n  const {\n    aboutMe: { html },\n    skillGraph,\n  } = data.userProfile as any;\n\n  return (\n    <Layout>\n      <main className=\"about\">\n        <div className=\"about-container\">\n          <div className=\"box-shadow-full\">\n            <div className=\"skill-mf\">\n              {skillGraph.skills.map((skill: any) => {\n                return (\n                  <React.Fragment key={skill.id}>\n                    <span>{skill.content}</span>{\" \"}\n                    <span className=\"pull-right\">{skill.percentage}</span>\n                    <div className=\"progress\">\n                      <div\n                        className=\"progress-bar\"\n                        role=\"progressbar\"\n                        style={{ width: skill.percentage }}\n                        aria-valuenow={skill.value}\n                        aria-valuemin=\"0\"\n                        aria-valuemax=\"100\"\n                      ></div>\n                    </div>\n                  </React.Fragment>\n                );\n              })}\n            </div>\n            <div className=\"about-me\">\n              <div className=\"title-box-2\">\n                <h5 className=\"title-left\">About Me</h5>\n              </div>\n              <div dangerouslySetInnerHTML={{ __html: html }} />\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n  );\n};\n\nexport default About;\n\nexport const Head = () => <SEO title=\"About\" />;\n\nexport const query = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    userProfile {\n      aboutMe {\n        html\n      }\n      skillGraph {\n        skills {\n          id\n          value\n          content\n          percentage\n        }\n      }\n    }\n  }\n`;\n"],"names":["NavBar","data","useStaticQuery","state","setState","useState","logo","userProfile","pictures","React","className","src","url","alt","style","maxWidth","type","id","htmlFor","Link","to","activeClassName","Layout","children","SEO","_ref","title","description","pathname","defaultTitle","defaultDescription","image","siteUrl","twitterUsername","site","siteMetadata","seo","name","content","rel","href","aboutMe","html","skillGraph","skills","map","skill","key","percentage","role","width","value","dangerouslySetInnerHTML","__html","Head"],"sourceRoot":""}