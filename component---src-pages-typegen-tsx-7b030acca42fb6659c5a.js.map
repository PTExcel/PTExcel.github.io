{"version":3,"file":"component---src-pages-typegen-tsx-7b030acca42fb6659c5a.js","mappings":"mLAGe,SAASA,IACpB,OACIC,EAAAA,cAAAA,MAAAA,KAAKA,EAAAA,cAAAA,KAAAA,KAAI,YACLA,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,KAAI,QACbF,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,UAAS,SAClBF,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,SAAQ,QACjBF,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,YAAW,YAIpC,CCXe,SAASC,EAAO,GAAe,IAAf,SAAEC,GAAU,EACvC,OACIJ,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAACD,EAAM,MAAG,cAEV,uBAAKM,UAAU,WAAWD,GAGtC,C,sDCWA,UAlBoBE,IAAmD,YAAlD,KAAEC,GAA2C,EAChE,OACEP,EAAAA,cAACG,EAAAA,EAAM,KACLH,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAAAA,IAAAA,KAAG,eAAsB,QAAV,EAACO,EAAKC,YAAI,OAAc,QAAd,EAATC,EAAWC,oBAAY,WAAd,EAATC,EAAyBC,OACzCZ,EAAAA,cAAAA,IAAAA,KAAG,eAAaa,KAAKC,UAAUP,EAAKQ,cACpCf,EAAAA,cAAAA,IAAAA,KAAG,eAAaa,KAAKC,UAAUP,EAAKS,eACpChB,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,IAAAA,KAAG,iBACHA,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,OAAAA,KAAOa,KAAKC,UAAUP,EAAM,KAAM,MAG/B,C","sources":["webpack://ptexcel.github.io/./src/components/navBar.tsx","webpack://ptexcel.github.io/./src/components/layout.tsx","webpack://ptexcel.github.io/./src/pages/typegen.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport React from 'react'\n\nexport default function NavBar() {\n    return (\n        <nav><h1>PT Excel</h1>\n            <div>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/about\">About</Link>\n                <Link to=\"/work\">Work</Link>\n                <Link to=\"/contact\">Contact</Link>\n            </div>\n        </nav>\n    )\n}\n","import React from 'react'\nimport NavBar from './navBar'\n\nexport default function Layout({ children }) {\n    return (\n        <div>\n            <NavBar />\n            hello world\n            <div className='content'>{children}</div>\n        </div >\n    )\n}\n","import { graphql, PageProps } from \"gatsby\";\nimport * as React from \"react\";\nimport Layout from '../components/layout';\n\nconst TypegenPage = ({ data }: PageProps<Queries.TypegenPageQuery>) => {\n  return (\n    <Layout>\n      <main>\n        <p>Site title: {data.site?.siteMetadata?.title}</p>\n        <p>Site title: {JSON.stringify(data.userProfile)}</p>\n        <p>Site title: {JSON.stringify(data.allPortfolio)}</p>\n        <hr />\n        <p>Query Result:</p>\n        <pre>\n          <code>{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      </main>\n    </Layout>\n\n  );\n};\n\nexport default TypegenPage;\n\nexport const query = graphql`\n  query TypegenPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    userProfile {\n      firstName\n      lastName\n      features\n      skillGraph {\n        skills {\n          id\n          value\n          content\n          percentage\n        }\n      }\n      backgroundImage {\n        url\n      }\n      pictures {\n        url\n      }\n      aboutMe {\n        html\n      }\n      portfolioSummary {\n        html\n      }\n      cv {\n        fileName\n        url\n      }\n    }\n    allPortfolio {\n      nodes {\n        id\n        title\n        subTitle\n        technologies\n        displayOrder\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n"],"names":["NavBar","React","Link","to","Layout","children","className","_ref","data","site","_data$site","siteMetadata","_data$site$siteMetada","title","JSON","stringify","userProfile","allPortfolio"],"sourceRoot":""}