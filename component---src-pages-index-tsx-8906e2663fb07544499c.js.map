{"version":3,"file":"component---src-pages-index-tsx-8906e2663fb07544499c.js","mappings":"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","sources":["webpack://ptexcel.github.io/./src/components/navBar.tsx","webpack://ptexcel.github.io/./src/components/layout.tsx","webpack://ptexcel.github.io/./src/pages/index.tsx"],"sourcesContent":["import { Link, graphql, useStaticQuery } from \"gatsby\";\nimport React, { useState } from \"react\";\n\nexport default function NavBar() {\n  const data = useStaticQuery(graphql`\n    query SiteInfo {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      userProfile {\n        pictures {\n          url\n        }\n      }\n    }\n  `);\n\n  const [state, setState] = useState({\n    logo: data.userProfile.pictures[0],\n  });\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"logo\">\n        <a className=\"navbar-brand\">\n          <img src={state.logo.url} alt=\"logo\" style={{ maxWidth: \"100px\" }} />\n        </a>\n        <span>Pt Excel</span>\n      </div>\n      <ul className=\"nav-links\">\n        <input type=\"checkbox\" id=\"checkbox_toggle\" />\n\n        <label htmlFor=\"checkbox_toggle\" className=\"hamburger\">\n          &#9776;\n        </label>\n        <div className=\"menu\">\n          <li>\n            <Link to=\"/\" activeClassName=\"active\">\n              Home\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/about\" activeClassName=\"active\">\n              About\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/work\" activeClassName=\"active\">\n              Work\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/contact\" activeClassName=\"active\">\n              Contact\n            </Link>\n          </li>\n        </div>\n      </ul>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport NavBar from \"./navBar\";\nimport \"../styles/global.scss\";\n\nexport default function Layout({ children }) {\n  return (\n    <div>\n      <NavBar />\n      <div className=\"content\">{children}</div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { graphql, HeadProps, PageProps } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport { DataProps } from \"../constants\";\n\nconst pageStyles = {\n  color: \"#232129\",\n  padding: 96,\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n};\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n};\nconst headingAccentStyles = {\n  color: \"#663399\",\n};\nconst paragraphStyles = {\n  marginBottom: 48,\n};\nconst codeStyles = {\n  color: \"#8A6534\",\n  padding: 4,\n  backgroundColor: \"#FFF4DB\",\n  fontSize: \"1.25rem\",\n  borderRadius: 4,\n};\nconst listStyles = {\n  marginBottom: 96,\n  paddingLeft: 0,\n};\nconst doclistStyles = {\n  paddingLeft: 0,\n};\nconst listItemStyles = {\n  fontWeight: 300,\n  fontSize: 24,\n  maxWidth: 560,\n  marginBottom: 30,\n};\n\nconst linkStyle = {\n  color: \"#8954A8\",\n  fontWeight: \"bold\",\n  fontSize: 16,\n  verticalAlign: \"5%\",\n};\n\nconst docLinkStyle = {\n  ...linkStyle,\n  listStyleType: \"none\",\n  display: `inline-block`,\n  marginBottom: 24,\n  marginRight: 12,\n};\n\nconst descriptionStyle = {\n  color: \"#232129\",\n  fontSize: 14,\n  marginTop: 10,\n  marginBottom: 0,\n  lineHeight: 1.25,\n};\n\nconst docLinks = [\n  {\n    text: \"TypeScript Documentation\",\n    url: \"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\",\n    color: \"#8954A8\",\n  },\n  {\n    text: \"GraphQL Typegen Documentation\",\n    url: \"https://www.gatsbyjs.com/docs/how-to/local-development/graphql-typegen/\",\n    color: \"#8954A8\",\n  },\n];\n\nconst badgeStyle = {\n  color: \"#fff\",\n  backgroundColor: \"#088413\",\n  border: \"1px solid #088413\",\n  fontSize: 11,\n  fontWeight: \"bold\",\n  letterSpacing: 1,\n  borderRadius: 4,\n  padding: \"4px 6px\",\n  display: \"inline-block\",\n  position: \"relative\" as \"relative\",\n  top: -2,\n  marginLeft: 10,\n  lineHeight: 1,\n};\n\nconst links = [\n  {\n    text: \"Tutorial\",\n    url: \"https://www.gatsbyjs.com/docs/tutorial/\",\n    description:\n      \"A great place to get started if you're new to web development. Designed to guide you through setting up your first Gatsby site.\",\n    color: \"#E95800\",\n  },\n  {\n    text: \"How to Guides\",\n    url: \"https://www.gatsbyjs.com/docs/how-to/\",\n    description:\n      \"Practical step-by-step guides to help you achieve a specific goal. Most useful when you're trying to get something done.\",\n    color: \"#1099A8\",\n  },\n  {\n    text: \"Reference Guides\",\n    url: \"https://www.gatsbyjs.com/docs/reference/\",\n    description:\n      \"Nitty-gritty technical descriptions of how Gatsby works. Most useful when you need detailed information about Gatsby's APIs.\",\n    color: \"#BC027F\",\n  },\n  {\n    text: \"Conceptual Guides\",\n    url: \"https://www.gatsbyjs.com/docs/conceptual/\",\n    description:\n      \"Big-picture explanations of higher-level Gatsby concepts. Most useful for building understanding of a particular topic.\",\n    color: \"#0D96F2\",\n  },\n  {\n    text: \"Plugin Library\",\n    url: \"https://www.gatsbyjs.com/plugins\",\n    description:\n      \"Add functionality and customize your Gatsby site or app with thousands of plugins built by our amazing developer community.\",\n    color: \"#8EB814\",\n  },\n  {\n    text: \"Build and Host\",\n    url: \"https://www.gatsbyjs.com/cloud\",\n    badge: true,\n    description:\n      \"Now youâ€™re ready to show the world! Give your Gatsby site superpowers: Build and host on Gatsby Cloud. Get started for free!\",\n    color: \"#663399\",\n  },\n];\n\nconst IndexPage: React.FC<PageProps> = () => {\n  return (\n    <Layout>\n      <main style={pageStyles}>\n        <h1 style={headingStyles}>\n          Congratulations\n          <br />\n          <span style={headingAccentStyles}>\n            â€” you just made a Gatsby site! ðŸŽ‰ðŸŽ‰ðŸŽ‰\n          </span>\n        </h1>\n        <p style={paragraphStyles}>\n          Edit <code style={codeStyles}>src/pages/index.tsx</code> to see this\n          page update in real-time. ðŸ˜Ž\n        </p>\n        <ul style={doclistStyles}>\n          {docLinks.map((doc) => (\n            <li key={doc.url} style={docLinkStyle}>\n              <a\n                style={linkStyle}\n                href={`${doc.url}?utm_source=starter&utm_medium=ts-docs&utm_campaign=minimal-starter-ts`}\n              >\n                {doc.text}\n              </a>\n            </li>\n          ))}\n        </ul>\n        <ul style={listStyles}>\n          {links.map((link) => (\n            <li key={link.url} style={{ ...listItemStyles, color: link.color }}>\n              <span>\n                <a\n                  style={linkStyle}\n                  href={`${link.url}?utm_source=starter&utm_medium=start-page&utm_campaign=minimal-starter-ts`}\n                >\n                  {link.text}\n                </a>\n                {link.badge && (\n                  <span style={badgeStyle} aria-label=\"New Badge\">\n                    NEW!\n                  </span>\n                )}\n                <p style={descriptionStyle}>{link.description}</p>\n              </span>\n            </li>\n          ))}\n        </ul>\n        <img\n          alt=\"Gatsby G Logo\"\n          src=\"data:image/svg+xml,%3Csvg width='24' height='24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 2a10 10 0 110 20 10 10 0 010-20zm0 2c-3.73 0-6.86 2.55-7.75 6L14 19.75c3.45-.89 6-4.02 6-7.75h-5.25v1.5h3.45a6.37 6.37 0 01-3.89 4.44L6.06 9.69C7 7.31 9.3 5.63 12 5.63c2.13 0 4 1.04 5.18 2.65l1.23-1.06A7.959 7.959 0 0012 4zm-8 8a8 8 0 008 8c.04 0 .09 0-8-8z' fill='%23639'/%3E%3C/svg%3E\"\n        />\n      </main>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport function Head(props: HeadProps<DataProps>) {\n  return <title>`{props.data.site.siteMetadata.title} - Home`</title>;\n}\n\nexport const query = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"names":["NavBar","data","useStaticQuery","state","setState","useState","logo","userProfile","pictures","React","className","src","url","alt","style","maxWidth","type","id","htmlFor","Link","to","activeClassName","Layout","children","pageStyles","color","padding","fontFamily","headingStyles","marginTop","marginBottom","headingAccentStyles","paragraphStyles","codeStyles","backgroundColor","fontSize","borderRadius","listStyles","paddingLeft","doclistStyles","listItemStyles","fontWeight","linkStyle","verticalAlign","docLinkStyle","listStyleType","display","marginRight","descriptionStyle","lineHeight","docLinks","text","badgeStyle","border","letterSpacing","position","top","marginLeft","links","description","badge","Head","props","site","siteMetadata","title","map","doc","key","href","link"],"sourceRoot":""}